/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ (function() {

eval("function getJSON(timeframe) {\r\n\tfetch(\"/data.json\").then(response => response.json())\r\n\t\t.then(data => showCardsInfo(data, timeframe));\r\n};\r\ngetJSON('weekly');\r\n\r\n\r\nfunction showCardsInfo(data, timeframe) {\r\n\tlet app = document.querySelector('.app');\r\n\r\n\t// Delete all cards (!profile) before adding new cards\r\n\twhile (app.childNodes.length > 1) {\r\n\t\tapp.removeChild(app.lastChild);\r\n\t}\r\n\r\n\t// Adding cards and their content\r\n\tdata.forEach(activity => {\r\n\t\tlet cssClass = activity.title.toLowerCase().replace(' ', '-');\r\n\t\tlet currentHours = activity.timeframes[timeframe].current;\r\n\t\tlet previousHours = activity.timeframes[timeframe].previous;\r\n\r\n\t\tapp.insertAdjacentHTML('beforeend', `\r\n\t\t\t<section class=\"card ${cssClass}\">\r\n\t\t\t\t<div class=\"card__topframe\"></div>\r\n\t\t\t\t<div class=\"card__content\">\r\n\t\t\t\t\t<div class=\"card__header\">\r\n\t\t\t\t\t\t<p class=\"card__title\">${activity.title}</p>\r\n\t\t\t\t\t\t<div class=\"card__img\">\r\n\t\t\t\t\t\t\t<img src=\"img/icon-ellipsis.svg\" alt=\"img\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"card__hours\">\r\n\t\t\t\t\t\t<div class=\"card__hours-current\">${currentHours}</div>\r\n\t\t\t\t\t\t<div class=\"card__hours-last\"> ${checkTimeframe(timeframe)} ${previousHours}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t`)\r\n\t})\r\n};\r\n\r\n// Check current timeframe\r\nfunction checkTimeframe(timeframe) {\r\n\tswitch (timeframe) {\r\n\t\tcase 'daily': return \"Last Day - \";\r\n\t\tcase 'weekly': return \"Last Week - \";\r\n\t\tcase 'monthly': return \"Last Month - \";\r\n\t}\r\n};\r\n\r\n// Change timeframe and cards content\r\ndocument.querySelector('.profile__timeframes').addEventListener('click', function (e) {\r\n\tif (e.target.closest('.profile__timeframes-link')) {\r\n\t\te.preventDefault();\r\n\r\n\t\tdocument.querySelector('.profile__timeframes-link.active').classList.remove('active')\r\n\t\te.target.classList.add('active');\r\n\t} else {\r\n\t\treturn false;\r\n\t};\r\n\r\n\tlet timeframe = document.querySelector('.profile__timeframes > .active').id;\r\n\tcheckTimeframe(timeframe);\r\n\r\n\tgetJSON(timeframe);\r\n\treturn false;\r\n});\r\n\r\n\r\n// Hover effects on cards and on elipsis into cards\r\ndocument.querySelector('.app').addEventListener('mouseover', function (e) {\r\n\tif (e.target.closest('.card__content')) {\r\n\t\te.target.closest('.card__content').classList.add('hover');\r\n\r\n\t\tif (e.target.closest('.card__img')) {\r\n\t\t\te.target.closest('.card__content').classList.remove('hover')\r\n\t\t}\r\n\t};\r\n});\r\ndocument.querySelector('.app').addEventListener('mouseout', function (e) {\r\n\tif (e.target.closest('.card__content')) {\r\n\t\te.target.closest('.card__content').classList.remove('hover')\r\n\t}\r\n})\n\n//# sourceURL=webpack://time-tracking-dashboard/./src/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/app.js"]();
/******/ 	
/******/ })()
;